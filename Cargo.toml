[package]
name = "gnss-qc"
version = "0.1.0"
license = "MPL-2.0"
authors = ["Guillaume W. Bres <guillaume.bressaix@gmail.com>"]
description = "GNSS data Quality Control"
homepage = "https://github.com/rtk-rs"
repository = "https://github.com/rtk-rs/gnss-qc"
keywords = ["geo", "gnss", "gps"]
categories = ["science", "science::geo"]
edition = "2021"

[package.metadata]
msrv = "1.81"

[package.metadata.docs.rs]
features = ["sp3", "flate2", "navigation"]
rustdoc-args = ["--cfg", "docrs", "--generate-link-to-definition"]

[features]
# Supports SP3 files by default
# Support Gzip compressed files by default
default = ["sp3", "flate2", "navigation", "cggtts"]

# Support Gzip compressed files natively
flate2 = [
    "rinex/flate2",
    "sp3?/flate2",
]

# Unlock support of high precision SP3 files.
# When targetting highest precision analysis and solutions, like in PPP,
# Otherwise, your processing (and possible navigation) only relies on RINEX.
sp3 = ["dep:sp3"]

# Unlock Post Processed Navigation.
# Without this option, you are limited to context setup & analysis (basic processing).
# This option unlocks most advanced solvers.
navigation = [
    "dep:anise",
    "rinex/nav",
    "sp3?/anise",
    "dep:log",
    "dep:gnss-rtk",
]

# Unlocks "embedded ephemeris" option. You should always activate
# this feature along "navigation". Most navigation database is downloaded
# at build time, otherwise it will have to be downloaded at deployment time.
# This option removes the need to access the Internet for most applications.
embed_ephem = [
    "dep:anise",
    "anise/embed_ephem",
]

# Unlock NAV CGGTTS solution solver
cggtts = [
    "dep:anise",
    "rinex/nav",
    "sp3?/anise",
    "dep:log",
    "dep:gnss-rtk",
    "dep:cggtts",
]

# Unlock graphical analysis (plots rendering), otherwise reports are solely text based
# plot = [
#     "dep:plotly", 
# ]

[dependencies.rinex]
git = "https://github.com/rtk-rs/rinex"
branch = "main"
features = [
    "qc", 
    "processing", 
    "obs", 
    "nav", 
    "ut1", 
    "meteo", 
    "clock", 
    "ionex", 
    "antex", 
    "serde",
]

[dependencies.sp3]
git = "https://github.com/rtk-rs/sp3"
branch = "main"
features = [
    "qc", 
    "processing", 
    "serde"
]
optional = true

[dependencies.gnss-rtk]
path = "../gnss-rtk"
optional = true
features = [
    "serde", 
    "embed_ephem"
]

[dependencies.cggtts]
git = "https://github.com/rtk-rs/cggtts"
branch = "main"
features = [
    "serde", 
    "scheduler",
    "tracker"
]
optional = true

[dependencies]
thiserror = "2"

strum = "0.27"
strum_macros = "0.26"
itertools = "0.14.0"
serde = { version = "1.0", default-features = false, features = ["derive"] }

hifitime = { git = "https://github.com/nyx-space/hifitime", branch = "master", features = ["serde", "std"] }
anise = { git = "https://github.com/nyx-space/anise", branch = "dep/hifitime-github", optional = true }

log = { version = "0.4", optional = true }

gnss-rs = { git = "https://github.com/rtk-rs/gnss", branch = "main", features = ["serde"] }
gnss-qc-traits = { git = "https://github.com/rtk-rs/qc-traits", branch = "main", features = ["processing"] }

maud = "0.26"
plotly = "0.12"

[dev-dependencies]
serde_json = "1"
